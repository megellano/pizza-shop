generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String @unique
  phone    String
  password String

  cart Cart?

  userRole UserRole @default(USER)

  provider   String?
  providerId String?

  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  order           Order[]
  verficationCode VerficationCode?
  verified        DateTime
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]

  items ProductItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductItem {
  id Int @id @default(autoincrement())

  price     Float
  size      Int?
  pizzaType Int?

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cartItems CartItem[]
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String
  price    Float  @default(0)
  imageUrl String

  products  Product[]
  cartItems CartItem[]
}

model Cart {
  id     Int   @id @default(autoincrement())
  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  token String?

  totalAmount Float @default(0)

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id            Int         @id @default(autoincrement())
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int

  pizzaType Int?
  size      Int?

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id     Int   @id @default(autoincrement())
  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalAmount Float

  status OrderStatus @default(NEW)

  paymentId String?

  items Json

  fullName String
  phone    String
  email    String?
  address  String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerficationCode {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createdAt DateTime @default(now())
}

enum OrderStatus {
  NEW
  PAYED
  PENDING
  DELIVERED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
  MANAGER
}
